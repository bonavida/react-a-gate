(this["webpackJsonpreact-a-gate-demo"]=this["webpackJsonpreact-a-gate-demo"]||[]).push([[0],{324:function(e,t,a){},325:function(e,t,a){},326:function(e,t,a){},327:function(e,t,a){},328:function(e,t,a){},329:function(e,t,a){},330:function(e,t,a){},331:function(e,t,a){},332:function(e,t,a){"use strict";a.r(t);var o=a(0),n=a.n(o),l=a(31),r=a(10),c=a(13),s=a(51),i=a(52),m=a(2),u=(a(68),function(){return n.a.createElement("div",{className:"header__container"},n.a.createElement("h1",{className:"header__title"},n.a.createElement(r.b,{to:"/"},"react-a-gate ",n.a.createElement("span",null,"demos"))),n.a.createElement("ul",{className:"header__menu"},n.a.createElement("li",{className:"header__menu-item"},n.a.createElement(r.c,{to:"/modal",isActive:function(e,t){var a=t.pathname;return["/","/modal"].includes(a)}},"Modal")),n.a.createElement("li",{className:"header__menu-item"},n.a.createElement(r.c,{to:"/tooltip"},"Tooltip")),n.a.createElement("li",{className:"header__menu-item"},n.a.createElement(r.c,{to:"/popover"},"Popover"))))}),p=a(20),d=(a(73),function(){return n.a.createElement("div",{className:"footer__container"},n.a.createElement("span",{className:"footer__author"},"bonavida"),n.a.createElement("span",{className:"footer__year"},(new Date).getFullYear()),n.a.createElement("div",{className:"footer__divider"}),n.a.createElement("a",{href:"https://github.com/bonavida/react-a-gate",target:"_blank",rel:"noopener noreferrer",className:"footer__link"},n.a.createElement(p.a,{className:"footer__icon",icon:["fab","github"]})))}),b=(a(74),function(e){var t=e.children;return n.a.createElement("div",{className:"layout__container"},n.a.createElement(u,null),n.a.createElement("div",{className:"layout__content"},t),n.a.createElement(d,null))}),_=a(4),v=a(12),h=(a(75),function(e){var t=e.children;return n.a.createElement(n.a.Fragment,null,t)});h.Header=function(e){var t=e.children,a=e.onClose;return n.a.createElement("header",{className:"modal__header"},n.a.createElement("h2",null,t),n.a.createElement(p.a,{icon:"times",className:"modal__close",onClick:function(){return a()}}))},h.Body=function(e){var t=e.children;return n.a.createElement("section",{className:"modal__body"},t)},h.Footer=function(e){var t=e.children;return n.a.createElement("footer",{className:"modal__footer"},t)};var E=h,f=a(335),g=a(58),y=(a(76),function(e){var t=e.language,a=void 0===t?"jsx":t,o=e.value;return n.a.createElement(f.a,{className:"codeblock",language:a,style:g.a},o)}),k=(a(324),function(){var e=Object(o.useState)(!1),t=Object(_.a)(e,2),a=t[0],l=t[1],r=Object(o.useState)(!1),c=Object(_.a)(r,2),s=c[0],i=c[1],m=function(){return l(!1)},u=function(){return i(!1)};return n.a.createElement("div",{className:"modalPage__container"},n.a.createElement("div",{className:"modalPage__example"},n.a.createElement("h2",{className:"modalPage__title"},"Example 1"),n.a.createElement("div",{className:"modalPage__block"},n.a.createElement(y,{value:'\nimport React, { useState } from \'react\';\nimport { ModalGate } from \'react-a-gate\';\n\nimport Modal from \'components/Modal\';\n\nconst App = () => {\n  const [isOpen, setIsOpen] = useState(false);\n\n  const openModal = () => setIsOpen(true);\n  const closeModal = () => setIsOpen(false);\n\n  return (\n    <>\n      \x3c!-- Element that triggers the opening of the modal --\x3e\n      <button type="button" className="App-button" onClick={openModal}>\n        Open modal\n      </button>\n      \x3c!-- ModalGate wrapper --\x3e\n      <ModalGate id="app_modal_1" isOpen={isOpen} onClose={closeModal}>\n        \x3c!-- Modal here is a component I created only for the purpose of this demo.\n          It can be any React component that you want or any text or container. --\x3e \n        <Modal>\n          <Modal.Header onClose={closeModal}>Modal</Modal.Header>\n          <Modal.Body>This is a modal</Modal.Body>\n          <Modal.Footer>\n            <button\n              type="button"\n              className="modal__button"\n              onClick={closeModal}\n            >\n              Close\n            </button>\n          </Modal.Footer>\n        </Modal>\n      </ModalGate>\n    </>\n  );\n};\n'}),n.a.createElement("div",{className:"modalPage__trigger"},n.a.createElement("button",{type:"button",className:"App-button",onClick:function(){return l(!0)}},"Open modal"),n.a.createElement(v.ModalGate,{id:"app_modal_1",isOpen:a,onClose:m},n.a.createElement(E,null,n.a.createElement(E.Header,{onClose:m},"Modal"),n.a.createElement(E.Body,null,n.a.createElement("div",{className:"modal__example"},n.a.createElement("div",null,"Things you can do with ",n.a.createElement("b",null,"ModalGate"),":"),n.a.createElement("ul",null,n.a.createElement("li",null,"You can render any kind of modal you want, just code and customize your own!"),n.a.createElement("li",null,"You can also render plain text."),n.a.createElement("li",null,"Scroll on the background is disabled."),n.a.createElement("li",null,"What if you want to close it? Just press the ESC key or click outside the modal. Or even put your own button and close it from the inside!")))),n.a.createElement(E.Footer,null,n.a.createElement("button",{type:"button",className:"modal__button",onClick:m},"Close"))))))),n.a.createElement("div",{className:"modalPage__example"},n.a.createElement("h2",{className:"modalPage__title"},"Example 2: ",n.a.createElement("span",null,"Customize modal")),n.a.createElement("div",{className:"modalPage__block"},n.a.createElement("div",null,n.a.createElement(y,{value:'\n// To override the default modal styles, you can pass\n// a custom CSS class through the className prop.\n// ...\n<ModalGate\n  id="app_modal_2"\n  className="custom-modal"\n  isOpen={isSecondOpen}\n  onClose={closeSecondModal}\n>\n  <Modal>\n    ...\n  </Modal>\n</ModalGate>\n// ...\n'}),n.a.createElement(y,{language:"sass",value:"\n// And then you can just define your own custom styles.\n// The two main CSS classes are:\n// modal__backdrop (custom-modal will override the css properties from this class)\n// modal__content\n\n.custom-modal {\n  // Override default styles\n  .modal__content {\n    opacity: 0.9;\n    max-width: 20%;\n    border: none;\n  }\n\n  // Custom modal styles\n  .modal__header,\n  .modal__body,\n  .modal__footer {\n    color: white;\n    background-color: #333;\n  }\n\n  .modal__button {\n    background-color: #333;\n    border: 1px solid white;\n  }\n}\n"})),n.a.createElement("div",{className:"modalPage__trigger custom-modal"},n.a.createElement("button",{type:"button",className:"App-button",onClick:function(){return i(!0)}},"Open modal"),n.a.createElement(v.ModalGate,{id:"app_modal_2",className:"custom-modal",isOpen:s,onClose:u},n.a.createElement(E,null,n.a.createElement(E.Header,{onClose:u},"Modal"),n.a.createElement(E.Body,null,n.a.createElement("div",{className:"modal__example"},n.a.createElement("div",null,"Things you can do with ",n.a.createElement("b",null,"ModalGate"),":"),n.a.createElement("ul",null,n.a.createElement("li",null,"You can render any kind of modal you want, just code and customize your own!"),n.a.createElement("li",null,"You can also render plain text."),n.a.createElement("li",null,"Scroll on the background is disabled."),n.a.createElement("li",null,"What if you want to close it? Just press the ESC key or click outside the modal. Or even put your own button and close it from the inside!")))),n.a.createElement(E.Footer,null,n.a.createElement("button",{type:"button",className:"modal__button",onClick:u},"Close"))))))))}),C=Object(o.createContext)(),N=a(59),O=(a(325),function(e){var t=e.children,a=e.id,l=Object(N.a)(e,["children","id"]),r=Object(o.useContext)(C);return n.a.createElement("label",{className:"radio__label",htmlFor:a},n.a.createElement("input",Object.assign({className:"radio__input",id:a},l,r)),n.a.createElement("span",{className:"radio__fake-input"}),n.a.createElement("span",{className:"radio__text"},t))}),j=(a(326),function(e){var t=e.name,a=e.options,o=void 0===a?[]:a,l=e.valueProperty,r=void 0===l?"value":l,c=e.labelProperty,s=void 0===c?"label":c,i=e.initialValue,m=e.onChange,u=function(e,t){return{type:"radio",name:e,onChange:function(e){var a=e.target.value;t&&t(a)}}}(t,m);return n.a.createElement("div",{className:"radio__group"},n.a.createElement(C.Provider,{value:u},o.map((function(e){var a=e[r],o=e[s];return n.a.createElement(O,{id:"".concat(t,"_").concat(a),value:a,defaultChecked:i===a,key:a},o)}))))}),x=(a(327),function(e){var t=e.id,a=e.value,l=e.defaultChecked,r=void 0!==l&&l,c=e.children,s=e.onChange,i=Object(o.useCallback)((function(e){var t=e.target.checked;s(t)}),[s]);return n.a.createElement("div",{className:"checkbox"},n.a.createElement("input",{className:"checkbox__check",type:"checkbox",id:t,value:a,defaultChecked:r,onChange:i}),n.a.createElement("label",{className:"checkbox__label",htmlFor:t},n.a.createElement("span",{className:"checkbox__box"}),n.a.createElement("span",{className:"checkbox__text"},c)))}),S=(a(328),[{label:"Top",value:"top"},{label:"Bottom",value:"bottom"},{label:"Left",value:"left"},{label:"Right",value:"right"}]),w=[{label:"Top",value:"top"},{label:"Bottom",value:"bottom"},{label:"Left",value:"left"},{label:"Right",value:"right"}],P=[{label:"Dark",value:"dark"},{label:"Light",value:"light"}],M=function(){return n.a.createElement("div",null,"I am a ",n.a.createElement("span",{style:{color:"#ffd500"}},"tooltip"),". Every time you move me, I calculate my position automatically. So, if I should be displayed on the top but there's no space, I just move to the bottom. Same goes for the other positions. If you want to see it, just play around!")},T=function(){var e=Object(o.useState)("top"),t=Object(_.a)(e,2),a=t[0],l=t[1],r=Object(o.useState)("top"),c=Object(_.a)(r,2),s=c[0],i=c[1],m=Object(o.useState)("dark"),u=Object(_.a)(m,2),p=u[0],d=u[1],b=Object(o.useState)(!1),h=Object(_.a)(b,2),E=h[0],f=h[1],g=Object(o.useCallback)((function(e){l(e)}),[]),k=Object(o.useCallback)((function(e){i(e)}),[]),C=Object(o.useCallback)((function(e){f(e),e||d("dark")}),[]),N=Object(o.useCallback)((function(e){d(e)}),[]);return n.a.createElement("div",{className:"tooltipPage__container"},n.a.createElement("div",{className:"tooltipPage__wrapper"},n.a.createElement("div",{className:"tooltipPage__config"},n.a.createElement("div",{className:"tooltipPage__block"},n.a.createElement("h5",null,"Trigger position:"),n.a.createElement(j,{name:"trigger_position",options:S,initialValue:"top",onChange:g}),n.a.createElement("h5",null,"Tooltip position:"),n.a.createElement(j,{name:"tooltip_position",options:w,initialValue:"top",onChange:k})),n.a.createElement("div",{className:"tooltipPage__block"},!E&&n.a.createElement(n.a.Fragment,null,n.a.createElement("h5",null,"Theme:"),n.a.createElement(j,{name:"tooltip_theme",options:P,initialValue:"dark",onChange:N})),n.a.createElement(x,{id:"custom__tooltip",value:"custom_tooltip",defaultChecked:E,onChange:C},"Customize tooltip?"))),n.a.createElement(y,{value:"\nimport React, { useState } from 'react';\nimport { TooltipGate } from 'react-a-gate';\n/** Styles */\nimport './App.scss';\n\nconst TooltipContent = () => (\n  <div>\n    I am a <span style={{ color: '#ffd500' }}>tooltip</span>. Every time you\n    move me, I calculate my position automatically. So, if I should be displayed\n    on the top but there's no space, I just move to the bottom. Same goes for\n    the other positions. If you want to see it, just play around!\n  </div>\n);\n\nconst App = () => (\n  \x3c!-- Tooltip wrapper --\x3e\n  <TooltipGate\n    content={<TooltipContent />}\n    place=\"top\"\n    className=\"custom-tooltip\"\n  >\n    \x3c!-- Trigger element --\x3e\n    <button type=\"button\" className='tooltipPage__button'>\n      Hover me\n    </button>\n  </TooltipGate>\n);\n"}),n.a.createElement(y,{language:"sass",value:"\n// Custom CSS class that overrides the default styles\n.custom-tooltip {\n  .tooltip__inner {\n    padding: 10px;\n    font-family: Arial, Helvetica, sans-serif;\n    line-height: 1.3em;\n  }\n}\n\n// Other custom CSS class to override the default colors.\n// The main classes are:\n// - tooltip__inner: The content of the tooltip\n// - tooltip__arrow, tooltip__arrow-border: The tooltip arrow\n.custom-tooltip.blue {\n  .tooltip__inner {\n    background-color: #1799bd;\n    border: 1px solid #afebff;\n  }\n\n  .tooltip__arrow {\n    border-color: #1799bd;\n  }\n\n  .tooltip__arrow-border {\n    border-color: #afebff;\n  }\n}\n"}),n.a.createElement("br",null),n.a.createElement("br",null)),n.a.createElement("div",{className:"tooltipPage__button-wrapper tooltipPage__button-wrapper--".concat(a)},n.a.createElement(v.TooltipGate,{content:n.a.createElement(M,null),place:s,theme:p,className:"custom-tooltip".concat(E?" blue":"")},n.a.createElement("button",{type:"button",className:"tooltipPage__button"},"Hover me"))))},I=(a(329),[{label:"Top",value:"top"},{label:"Bottom",value:"bottom"},{label:"Left",value:"left"},{label:"Right",value:"right"}]),G=[{label:"Top",value:"top"},{label:"Bottom",value:"bottom"},{label:"Left",value:"left"},{label:"Right",value:"right"}],A=[{label:"Dark",value:"dark"},{label:"Light",value:"light"}],R=[{label:"Click",value:"click"},{label:"Hover",value:"hover"}],H=function(){return n.a.createElement("div",null,"I am a ",n.a.createElement("span",{style:{color:"#ffd500"}},"popover"),". Every time you move me, I calculate my position automatically. So, if I should be displayed on the top but there's no space, I just move to the bottom. Same goes for the other positions. If you want to see it, just play around!")},F=[{id:1,path:"/",exact:!0,RouteComponent:k},{id:2,path:"/modal",exact:!0,RouteComponent:k},{id:3,path:"/tooltip",exact:!0,RouteComponent:T},{id:4,path:"/popover",exact:!0,RouteComponent:function(){var e=Object(o.useState)("top"),t=Object(_.a)(e,2),a=t[0],l=t[1],r=Object(o.useState)("top"),c=Object(_.a)(r,2),s=c[0],i=c[1],m=Object(o.useState)("dark"),u=Object(_.a)(m,2),p=u[0],d=u[1],b=Object(o.useState)("dark"),h=Object(_.a)(b,2),E=h[0],f=h[1],g=Object(o.useState)(!1),k=Object(_.a)(g,2),C=k[0],N=k[1],O=Object(o.useCallback)((function(e){l(e)}),[]),S=Object(o.useCallback)((function(e){i(e)}),[]),w=Object(o.useCallback)((function(e){N(e),e||d("dark")}),[]),P=Object(o.useCallback)((function(e){d(e)}),[]),M=Object(o.useCallback)((function(e){f(e)}),[]);return n.a.createElement("div",{className:"popoverPage__container"},n.a.createElement("div",{className:"popoverPage__wrapper"},n.a.createElement("div",{className:"popoverPage__config"},n.a.createElement("div",{className:"popoverPage__block"},n.a.createElement("h5",null,"Trigger position:"),n.a.createElement(j,{name:"trigger_position",options:I,initialValue:"top",onChange:O}),n.a.createElement("h5",null,"Popover position:"),n.a.createElement(j,{name:"popover_position",options:G,initialValue:"top",onChange:S})),n.a.createElement("div",{className:"popoverPage__block"},!C&&n.a.createElement(n.a.Fragment,null,n.a.createElement("h5",null,"Theme:"),n.a.createElement(j,{name:"popover_theme",options:A,initialValue:"dark",onChange:P})),n.a.createElement(x,{id:"custom__popover",value:"custom_popover",defaultChecked:C,onChange:w},"Customize popover?"),n.a.createElement("h5",{style:{marginTop:"10px"}},"Mode:"),n.a.createElement(j,{name:"popover_mode",options:R,initialValue:"click",onChange:M}))),n.a.createElement(y,{value:"\nimport React, { useState } from 'react';\nimport { PopoverGate } from 'react-a-gate';\n/** Styles */\nimport './App.scss';\n\nconst PopoverContent = () => (\n  <div>\n    I am a <span style={{ color: '#ffd500' }}>popover</span>. Every time you\n    move me, I calculate my position automatically. So, if I should be displayed\n    on the top but there's no space, I just move to the bottom. Same goes for\n    the other positions. If you want to see it, just play around!\n  </div>\n);\n\nconst App = () => (\n  \x3c!-- Popover wrapper --\x3e\n  <PopoverGate\n    content={<PopoverContent />}\n    place=\"top\"\n    mode=\"click\"\n    className=\"custom-popover\"\n  >\n    \x3c!-- Trigger element --\x3e\n    <button type=\"button\" className='popoverPage__button'>\n      Hover me\n    </button>\n  </PopoverGate>\n);\n"}),n.a.createElement(y,{language:"sass",value:"\n// Custom CSS class that overrides the default styles\n.custom-popover {\n  .popover__inner {\n    padding: 10px;\n    font-family: Arial, Helvetica, sans-serif;\n    line-height: 1.3em;\n  }\n}\n\n// Other custom CSS class to override the default colors.\n// The main classes are:\n// - popover__inner: The content of the popover\n// - popover__arrow, popover__arrow-border: The popover arrow\n.custom-popover.blue {\n  .popover__inner {\n    background-color: #1799bd;\n    border: 1px solid #afebff;\n  }\n\n  .popover__arrow {\n    border-color: #1799bd;\n  }\n\n  .popover__arrow-border {\n    border-color: #afebff;\n  }\n}\n"}),n.a.createElement("br",null),n.a.createElement("br",null)),n.a.createElement("div",{className:"popoverPage__button-wrapper popoverPage__button-wrapper--".concat(a)},n.a.createElement(v.PopoverGate,{content:n.a.createElement(H,null),place:s,theme:p,mode:E,className:"custom-popover".concat(C?" blue":"")},n.a.createElement("button",{type:"button",className:"popoverPage__button"},"hover"===E?"Hover":"Click"," me"))))}}],B=function(){return n.a.createElement(b,null,n.a.createElement(m.d,null,Array.isArray(F)&&F.map((function(e){var t=e.id,a=e.path,o=e.exact,l=e.RouteComponent;return n.a.createElement(m.b,{key:t,path:a,exact:o,component:l})})),n.a.createElement(m.a,{to:"/"})))};a(330);c.b.add(s.a,i.a);var V=function(){return n.a.createElement(r.a,{basename:"/"},n.a.createElement(B,null))},L=(a(331),document.getElementById("root"));Object(l.render)(n.a.createElement(n.a.StrictMode,null,n.a.createElement(V,null)),L)},60:function(e,t,a){e.exports=a(332)},68:function(e,t,a){},73:function(e,t,a){},74:function(e,t,a){},75:function(e,t,a){},76:function(e,t,a){}},[[60,1,2]]]);
//# sourceMappingURL=main.789beffe.chunk.js.map